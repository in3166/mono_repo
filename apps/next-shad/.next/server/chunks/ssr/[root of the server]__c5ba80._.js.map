{
  "version": 3,
  "sources": [],
  "sections": [
    {
      "offset": {
        "line": 75,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/lib/emotion/createEmotionCache.ts"
        ],
        "sourcesContent": [
          "import createCache, { type EmotionCache } from '@emotion/cache';\n\nconst isBrowser = typeof document !== 'undefined';\n\nexport const createEmotionCache = (): EmotionCache => {\n  let insertionPoint;\n  if (isBrowser) {\n    const emotionInsertionPoint = document.querySelector<HTMLMetaElement>(\n      'meta[name=\"emotion-insertion-point\"]'\n    );\n    insertionPoint = emotionInsertionPoint ?? undefined;\n  }\n  return createCache({ key: 'css', insertionPoint });\n};\n"
        ],
        "names": [],
        "mappings": ";;;AAAA;;;;;;AAEA,MAAM,YAAY,OAAO,aAAa;AAE/B,MAAM,qBAAqB;IAChC,IAAI;IACJ,IAAI,WAAW;QACb,MAAM,wBAAwB,SAAS,aAAa,CAClD;QAEF,iBAAiB,yBAAyB;IAC5C;IACA,OAAO,CAAA,GAAA,oIAAA,CAAA,UAAW,AAAD,EAAE;QAAE,KAAK;QAAO;IAAe;AAClD"
      }
    },
    {
      "offset": {
        "line": 96,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 103,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": ""
      }
    },
    {
      "offset": {
        "line": 105,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 125,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/next-i18next.config.mjs"
        ],
        "sourcesContent": [
          "const debugI18n = ['true', 1].includes(\n  process?.env?.NEXTJS_DEBUG_I18N ?? 'false'\n)\n\nconst localePublicFolder = undefined\n\nexport const defaultLocale = 'en'\n\nconst getLocalesPath = async () => {\n  if ('window' in globalThis) {\n    return localePublicFolder\n  }\n  const path = await import('path').then(mod => mod.default)\n  return path.resolve('../../packages/common-i18n/src/locales')\n}\n\nconst localePath = await getLocalesPath()\n\n/**\n * @type {import('next-i18next').UserConfig}\n */\nexport default {\n  i18n: {\n    defaultLocale,\n    locales: ['en', 'fr']\n  },\n  saveMissing: false,\n  strictMode: true,\n  serializeConfig: false,\n  reloadOnPrerender: process?.env?.NODE_ENV === 'development',\n  react: {\n    useSuspense: false\n  },\n  debug: debugI18n,\n  /*\n  interpolation: {\n    escapeValue: false,\n  },\n  */\n  localePath\n}\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA,MAAM,YAAY;IAAC;IAAQ;CAAE,CAAC,QAAQ,CACpC,SAAS,KAAK,qBAAqB;AAGrC,MAAM,qBAAqB;AAEpB,MAAM,gBAAgB;AAE7B,MAAM,iBAAiB;IACrB,IAAI,YAAY,YAAY;QAC1B,OAAO;IACT;IACA,MAAM,OAAO,MAAM,qGAAe,IAAI,CAAC,CAAA,MAAO,IAAI,OAAO;IACzD,OAAO,KAAK,OAAO,CAAC;AACtB;AAEA,MAAM,aAAa,MAAM;uCAKV;IACb,MAAM;QACJ;QACA,SAAS;YAAC;YAAM;SAAK;IACvB;IACA,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,mBAAmB,SAAS,KAAK,aAAa;IAC9C,OAAO;QACL,aAAa;IACf;IACA,OAAO;IACP;;;;EAIA,GACA;AACF"
      }
    },
    {
      "offset": {
        "line": 165,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 172,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/pages/_document.tsx"
        ],
        "sourcesContent": [
          "import createEmotionServer from '@emotion/server/create-instance';\nimport {\n  default as Document,\n  type DocumentProps,\n  Html,\n  Main,\n  Head,\n  NextScript,\n} from 'next/document';\nimport { createEmotionCache } from '@/lib/emotion';\nimport { defaultLocale } from '../../next-i18next.config.mjs';\n\ntype Props = DocumentProps & {\n  emotionStyleTags?: string[];\n};\n\nclass MyDocument extends Document<Props> {\n  override render() {\n    const locale = this.props.locale ?? defaultLocale;\n\n    return (\n      <Html lang={locale}>\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"emotion-insertion-point\" content=\"\" />\n          <link\n            rel=\"apple-touch-icon\"\n            sizes=\"180x180\"\n            href=\"/images/favicon/apple-touch-icon.png\"\n          />\n          <link\n            rel=\"icon\"\n            type=\"image/png\"\n            sizes=\"32x32\"\n            href=\"/images/favicon/favicon-32x32.png\"\n          />\n          <link\n            rel=\"icon\"\n            type=\"image/png\"\n            sizes=\"16x16\"\n            href=\"/images/favicon/favicon-16x16.png\"\n          />\n          <link rel=\"manifest\" href=\"/images/favicon/site.webmanifest\" />\n          <link\n            rel=\"mask-icon\"\n            href=\"/images/favicon/safari-pinned-tab.svg\"\n            color=\"#5bbad5\"\n          />\n          <link rel=\"shortcut icon\" href=\"/images/favicon/favicon.ico\" />\n          <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n          <meta\n            name=\"msapplication-config\"\n            content=\"/images/favicon/browserconfig.xml\"\n          />\n          <meta name=\"theme-color\" content=\"#ffffff\" />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\n// Remove this method if not needed. Allows emotion to output the inlined css at insertion point (head)\n// only useful when you need some way to override theme/styles (ie: using mui, mantine, chakra...).\nMyDocument.getInitialProps = async (ctx) => {\n  if (!ctx.req) {\n    return ctx.defaultGetInitialProps(ctx);\n  }\n  const originalRenderPage = ctx.renderPage;\n  // You can consider sharing the same Emotion cache between all the SSR requests to speed up performance.\n  // However, be aware that it can have global side effects.\n  const cache = createEmotionCache();\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      enhanceApp: (App: any) =>\n        function EnhanceApp(props) {\n          return <App emotionCache={cache} {...props} />;\n        },\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  const emotionStyles = extractCriticalToChunks(initialProps.html);\n  const emotionStyleTags = emotionStyles.styles.map((style) => (\n    <style\n      data-emotion={`${style.key} ${style.ids.join(' ')}`}\n      key={style.key}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: style.css }}\n    />\n  ));\n  return {\n    ...initialProps,\n    emotionStyleTags,\n  };\n};\n\n// Example to process graceful shutdowns (ie: closing db or other resources)\n// https://nextjs.org/docs/deployment#manual-graceful-shutdowns\nif (process.env.NEXT_MANUAL_SIG_HANDLE) {\n  // this should be added in your custom _document\n  process.on('SIGTERM', () => {\n    console.log('Received SIGTERM:', 'cleaning up');\n    process.exit(0);\n  });\n\n  process.on('SIGINT', () => {\n    console.log('Received SIGINT:', 'cleaning up');\n    process.exit(0);\n  });\n}\n\nexport default MyDocument;\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;AACA;AAQA;AACA;AADA;;;;;;;;;;;;;AAOA,MAAM,mBAAmB,gSAAA,CAAA,UAAQ;IACtB,SAAS;QAChB,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,2IAAA,CAAA,gBAAa;QAEjD,qBACE,qKAAC,gSAAA,CAAA,OAAI;YAAC,MAAM;;8BACV,qKAAC,gSAAA,CAAA,OAAI;;sCACH,qKAAC;4BAAK,SAAQ;;;;;;sCACd,qKAAC;4BAAK,MAAK;4BAA0B,SAAQ;;;;;;sCAC7C,qKAAC;4BACC,KAAI;4BACJ,OAAM;4BACN,MAAK;;;;;;sCAEP,qKAAC;4BACC,KAAI;4BACJ,MAAK;4BACL,OAAM;4BACN,MAAK;;;;;;sCAEP,qKAAC;4BACC,KAAI;4BACJ,MAAK;4BACL,OAAM;4BACN,MAAK;;;;;;sCAEP,qKAAC;4BAAK,KAAI;4BAAW,MAAK;;;;;;sCAC1B,qKAAC;4BACC,KAAI;4BACJ,MAAK;4BACL,OAAM;;;;;;sCAER,qKAAC;4BAAK,KAAI;4BAAgB,MAAK;;;;;;sCAC/B,qKAAC;4BAAK,MAAK;4BAA0B,SAAQ;;;;;;sCAC7C,qKAAC;4BACC,MAAK;4BACL,SAAQ;;;;;;sCAEV,qKAAC;4BAAK,MAAK;4BAAc,SAAQ;;;;;;;;;;;;8BAEnC,qKAAC;;sCACC,qKAAC,gSAAA,CAAA,OAAI;;;;;sCACL,qKAAC,gSAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;IAInB;AACF;AAEA,uGAAuG;AACvG,mGAAmG;AACnG,WAAW,eAAe,GAAG,OAAO;IAClC,IAAI,CAAC,IAAI,GAAG,EAAE;QACZ,OAAO,IAAI,sBAAsB,CAAC;IACpC;IACA,MAAM,qBAAqB,IAAI,UAAU;IACzC,wGAAwG;IACxG,0DAA0D;IAC1D,MAAM,QAAQ,CAAA,GAAA,4JAAA,CAAA,qBAAkB,AAAD;IAC/B,6DAA6D;IAC7D,MAAM,EAAE,uBAAuB,EAAE,GAAG,CAAA,GAAA,kLAAA,CAAA,UAAmB,AAAD,EAAE;IAExD,IAAI,UAAU,GAAG,IACf,mBAAmB;YACjB,8DAA8D;YAC9D,YAAY,CAAC,MACX,SAAS,WAAW,KAAK;oBACvB,qBAAO,qKAAC;wBAAI,cAAc;wBAAQ,GAAG,KAAK;;;;;;gBAC5C;QACJ;IAEF,MAAM,eAAe,MAAM,gSAAA,CAAA,UAAQ,CAAC,eAAe,CAAC;IACpD,MAAM,gBAAgB,wBAAwB,aAAa,IAAI;IAC/D,MAAM,mBAAmB,cAAc,MAAM,CAAC,GAAG,CAAC,CAAC,sBACjD,qKAAC;YACC,gBAAc,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM;YAEnD,2CAA2C;YAC3C,yBAAyB;gBAAE,QAAQ,MAAM,GAAG;YAAC;WAFxC,MAAM,GAAG;;;;;IAKlB,OAAO;QACL,GAAG,YAAY;QACf;IACF;AACF;AAEA,4EAA4E;AAC5E,+DAA+D;AAC/D,IAAI,QAAQ,GAAG,CAAC,sBAAsB,EAAE;IACtC,gDAAgD;IAChD,QAAQ,EAAE,CAAC,WAAW;QACpB,QAAQ,GAAG,CAAC,qBAAqB;QACjC,QAAQ,IAAI,CAAC;IACf;IAEA,QAAQ,EAAE,CAAC,UAAU;QACnB,QAAQ,GAAG,CAAC,oBAAoB;QAChC,QAAQ,IAAI,CAAC;IACf;AACF;uCAEe"
      }
    },
    {
      "offset": {
        "line": 383,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 444,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/config/react-query.config.ts"
        ],
        "sourcesContent": [
          "import type { QueryClientConfig } from '@tanstack/react-query';\r\n\r\nexport const queryClientConfig: QueryClientConfig = {\r\n\tdefaultOptions: {\r\n\t\tqueries: {\r\n\t\t\trefetchOnWindowFocus: false,\r\n\t\t},\r\n\t},\r\n};"
        ],
        "names": [],
        "mappings": ";;;AAEO,MAAM,oBAAuC;IACnD,gBAAgB;QACf,SAAS;YACR,sBAAsB;QACvB;IACD;AACD"
      }
    },
    {
      "offset": {
        "line": 454,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 460,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/providers/ReactQueryClientProvider.tsx"
        ],
        "sourcesContent": [
          "import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport type { FC, PropsWithChildren } from 'react';\nimport { queryClientConfig } from '@/config/react-query.config';\n\nconst queryClient = new QueryClient(queryClientConfig);\n\ntype Props = PropsWithChildren;\n\nexport const ReactQueryClientProvider: FC<Props> = (props) => {\n  const { children } = props;\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;AAEA;;;;;;;;AAEA,MAAM,cAAc,IAAI,wJAAA,CAAA,cAAW,CAAC,0JAAA,CAAA,oBAAiB;AAI9C,MAAM,2BAAsC,CAAC;IAClD,MAAM,EAAE,QAAQ,EAAE,GAAG;IACrB,qBACE,qKAAC,wJAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C"
      }
    },
    {
      "offset": {
        "line": 485,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 492,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/providers/AppProviders.tsx"
        ],
        "sourcesContent": [
          "import { CacheProvider, type EmotionCache } from '@emotion/react';\nimport type { Session } from 'next-auth';\nimport { SessionProvider } from 'next-auth/react';\nimport type { FC, PropsWithChildren } from 'react';\n\nimport { createEmotionCache } from '@/lib/emotion';\nimport { ReactQueryClientProvider } from './ReactQueryClientProvider';\n\ntype Props = PropsWithChildren<{\n  /**\n   * next-auth session\n   */\n  session?: Session | null;\n  /**\n   * Optional emotion/cache to use\n   */\n  emotionCache?: EmotionCache;\n}>;\n\n// Client-side cache, shared for the whole session of the user in the browser.\nconst clientSideEmotionCache = createEmotionCache();\n\nexport const AppProviders: FC<Props> = (props) => {\n  const { children, session, emotionCache = clientSideEmotionCache } = props;\n  return (\n    <SessionProvider session={session} refetchInterval={0}>\n      <CacheProvider value={emotionCache}>\n        {/* Mui CssBaseline disabled in this example as tailwind provides its own */}\n        {/* <CssBaseline /> */}\n        <ReactQueryClientProvider>{children}</ReactQueryClientProvider>\n      </CacheProvider>\n    </SessionProvider>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;AAEA;AAGA;AACA;AADA;;;;;;;;;;;;;AAcA,8EAA8E;AAC9E,MAAM,yBAAyB,CAAA,GAAA,4JAAA,CAAA,qBAAkB,AAAD;AAEzC,MAAM,eAA0B,CAAC;IACtC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,sBAAsB,EAAE,GAAG;IACrE,qBACE,qKAAC,mIAAA,CAAA,kBAAe;QAAC,SAAS;QAAS,iBAAiB;kBAClD,cAAA,qKAAC,oIAAA,CAAA,gBAAa;YAAC,OAAO;sBAGpB,cAAA,qKAAC,8JAAA,CAAA,2BAAwB;0BAAE;;;;;;;;;;;;;;;;AAInC"
      }
    },
    {
      "offset": {
        "line": 540,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 547,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/pages/_app.tsx"
        ],
        "sourcesContent": [
          "import type { EmotionCache } from '@emotion/cache';\nimport { Analytics } from '@vercel/analytics/react';\nimport type { AppProps } from 'next/app';\nimport Head from 'next/head';\nimport { appWithTranslation } from 'next-i18next';\nimport nextI18nextConfig from '../../next-i18next.config.mjs';\nimport { AppProviders } from '../providers/AppProviders';\n\n/**\n * Import global styles, global css or polyfills here\n * i.e.: import '@/assets/theme/style.scss'\n */\nimport '../styles/globals.css';\n\nimport '@fontsource-variable/inter';\n\nexport type MyAppProps = AppProps & {\n  emotionCache?: EmotionCache;\n};\n\n/**\n * @link https://nextjs.org/docs/advanced-features/custom-app\n */\nconst MyApp = (appProps: MyAppProps) => {\n\n  const { Component, pageProps, emotionCache } = appProps;\n  return (\n    <AppProviders emotionCache={emotionCache}>\n      <Head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Head>\n      <Component {...pageProps} />\n      <Analytics />\n    </AppProviders>\n  );\n};\n\nexport default appWithTranslation(MyApp, {\n  ...nextI18nextConfig,\n});\n"
        ],
        "names": [],
        "mappings": ";;;;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAcA;;CAEC,GACD,MAAM,QAAQ,CAAC;IAEb,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG;IAC/C,qBACE,qKAAC,kJAAA,CAAA,eAAY;QAAC,cAAc;;0BAC1B,qKAAC,6HAAA,CAAA,UAAI;0BACH,cAAA,qKAAC;oBAAK,MAAK;oBAAW,SAAQ;;;;;;;;;;;0BAEhC,qKAAC;gBAAW,GAAG,SAAS;;;;;;0BACxB,qKAAC,4JAAA,CAAA,YAAS;;;;;;;;;;;AAGhB;uCAEe,CAAA,GAAA,uHAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;IACvC,GAAG,2IAAA,CAAA,UAAiB;AACtB"
      }
    },
    {
      "offset": {
        "line": 613,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 630,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/lib/i18n/getSortedI18nNamespaces.ts"
        ],
        "sourcesContent": [
          "import type { I18nActiveNamespaces } from '@/lib/i18n/I18nNamespace.types';\n\n/**\n * Ensure that the i18nNamespaces are sorted alphabetically when passed in feature configs.\n * That should help typescript when compatible groups (ie ['common', 'home'] and ['home', 'common'])\n * should not produce a different union type.\n *\n * @throws Error if the namespaces are not sorted alphabetically.\n */\nexport const getSortedI18nNamespaces = <T extends I18nActiveNamespaces>(\n  ns: T\n) => {\n  if ([...ns].sort((a, b) => a.localeCompare(b)).toString() !== ns.toString()) {\n    throw new Error(\n      `Config error: i18nNamespaces should be sorted for best performance ${JSON.stringify(\n        ns\n      )}`\n    );\n  }\n  return ns;\n};\n"
        ],
        "names": [],
        "mappings": ";;;AASO,MAAM,0BAA0B,CACrC;IAEA,IAAI;WAAI;KAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,aAAa,CAAC,IAAI,QAAQ,OAAO,GAAG,QAAQ,IAAI;QAC3E,MAAM,IAAI,MACR,CAAC,mEAAmE,EAAE,KAAK,SAAS,CAClF,KACC;IAEP;IACA,OAAO;AACT"
      }
    },
    {
      "offset": {
        "line": 641,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 647,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/demo.config.ts"
        ],
        "sourcesContent": [
          "import { getSortedI18nNamespaces } from '@/lib/i18n/getSortedI18nNamespaces';\n\nconst i18nNamespaces = getSortedI18nNamespaces(['common', 'demo']);\n\nexport type DemoConfig = {\n  i18nNamespaces: typeof i18nNamespaces;\n};\n\nexport const demoConfig: DemoConfig = {\n  i18nNamespaces,\n};\n"
        ],
        "names": [],
        "mappings": ";;;AAAA;;AAEA,MAAM,iBAAiB,CAAA,GAAA,8JAAA,CAAA,0BAAuB,AAAD,EAAE;IAAC;IAAU;CAAO;AAM1D,MAAM,aAAyB;IACpC;AACF"
      }
    },
    {
      "offset": {
        "line": 659,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 681,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/components/banner/Banner.tsx"
        ],
        "sourcesContent": [
          "import { Speaker as SpeakerIcon, Close as XIcon } from '@mui/icons-material';\nimport type { FC } from 'react';\n\nexport const Banner: FC = () => {\n  return (\n    <div className=\"bg-indigo-600\">\n      <div className=\"mx-auto max-w-7xl p-3 sm:px-6 lg:px-8\">\n        <div className=\"flex flex-wrap items-center justify-between\">\n          <div className=\"flex w-0 flex-1 items-center\">\n            <span className=\"flex rounded-lg bg-indigo-800 p-2\">\n              <SpeakerIcon className=\"size-6 text-white\" aria-hidden=\"true\" />\n            </span>\n            <p className=\"ml-3 truncate font-medium text-white\">\n              <span className=\"md:hidden\">We announced a new product!</span>\n              <span className=\"hidden md:inline\">\n                Big news! We're excited to announce a brand new product.\n              </span>\n            </p>\n          </div>\n          <div className=\"order-3 mt-2 w-full shrink-0 sm:order-2 sm:mt-0 sm:w-auto\">\n            <a\n              href=\"@/components/banner/Banner#\"\n              className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-2 text-sm font-medium text-indigo-600 shadow-sm hover:bg-indigo-50\"\n            >\n              Learn more\n            </a>\n          </div>\n          <div className=\"order-2 shrink-0 sm:order-3 sm:ml-3\">\n            <button\n              type=\"button\"\n              className=\"-mr-1 flex rounded-md p-2 hover:bg-indigo-500 focus:outline-none focus:ring-2 focus:ring-white sm:-mr-2\"\n            >\n              <span className=\"sr-only\">Dismiss</span>\n              <XIcon className=\"size-6 text-white\" aria-hidden=\"true\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;;;AAGO,MAAM,SAAa;IACxB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAK,WAAU;0CACd,cAAA,qKAAC;oCAAY,WAAU;oCAAoB,eAAY;;;;;;;;;;;0CAEzD,qKAAC;gCAAE,WAAU;;kDACX,qKAAC;wCAAK,WAAU;kDAAY;;;;;;kDAC5B,qKAAC;wCAAK,WAAU;kDAAmB;;;;;;;;;;;;;;;;;;kCAKvC,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;kCAIH,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BACC,MAAK;4BACL,WAAU;;8CAEV,qKAAC;oCAAK,WAAU;8CAAU;;;;;;8CAC1B,qKAAC;oCAAM,WAAU;oCAAoB,eAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/D"
      }
    },
    {
      "offset": {
        "line": 821,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 842,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/public/images/layout/footer-waves.svg.mjs%20%28structured%20image%20object%29"
        ],
        "sourcesContent": [
          "import src from \"IMAGE\";\nexport default { src, width: 1440, height: 320, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"
        ],
        "names": [],
        "mappings": ";;;AAAA;;uCACe;IAAE,KAAA,2JAAA,CAAA,UAAG;IAAE,OAAO;IAAM,QAAQ;IAAK,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE"
      }
    },
    {
      "offset": {
        "line": 855,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 861,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/layouts/main/MainFooter.tsx"
        ],
        "sourcesContent": [
          "import styled from '@emotion/styled';\nimport GithubIcon from '@ijyu-3166/ui-lib/icons/social/github.svg';\nimport type { FC } from 'react';\nimport FooterWaves from '@/public/images/layout/footer-waves.svg';\n\nconst BgWaved = styled(FooterWaves)`\n  //background-size: cover;\n  object-fit: cover;\n  position: absolute;\n  width: 100%;\n  object-position: center;\n  display: block;\n`;\n\nconst FooterCtn = styled.footer`\n  display: grid;\n  .content,\n  .bgImage {\n    grid-area: 1 / 1;\n  }\n  .bgImage {\n    z-index: -1;\n  }\n`;\n\nexport const MainFooter: FC = () => {\n  return (\n    <FooterCtn>\n      <div className={'bgImage'}>\n        <BgWaved />\n      </div>\n      <div className={'content'}>\n        <a\n          href={'https://github.com/belgattitude/nextjs-monorepo-example'}\n          target={'_blank'}\n          rel={'noopener noreferrer'}\n        >\n          <GithubIcon />\n        </a>\n      </div>\n    </FooterCtn>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;;;;;;AAGA;;;;;;;;;AAEA,MAAM,UAAU,CAAA,GAAA,sIAAA,CAAA,UAAM,AAAD,EAAE,gWAAA,CAAA,UAAW,CAAC,CAAC;;;;;;;AAOpC,CAAC;AAED,MAAM,YAAY,sIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;;;;;;;AAShC,CAAC;AAEM,MAAM,aAAiB;IAC5B,qBACE,qKAAC;;0BACC,qKAAC;gBAAI,WAAW;0BACd,cAAA,qKAAC;;;;;;;;;;0BAEH,qKAAC;gBAAI,WAAW;0BACd,cAAA,qKAAC;oBACC,MAAM;oBACN,QAAQ;oBACR,KAAK;8BAEL,cAAA,qKAAC;;;;;;;;;;;;;;;;;;;;;AAKX"
      }
    },
    {
      "offset": {
        "line": 941,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 948,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/layouts/main/MainLayout.tsx"
        ],
        "sourcesContent": [
          "import type { FC, ReactNode } from 'react';\nimport { MainFooter } from './MainFooter';\n\nexport const MainLayout: FC<{ children: ReactNode }> = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"flex h-screen flex-col\">\n      <main>{children}</main>\n      <MainFooter />\n    </div>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AACA;;;;;;;AAEO,MAAM,aAA0C,CAAC;IACtD,MAAM,EAAE,QAAQ,EAAE,GAAG;IACrB,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;0BAAM;;;;;;0BACP,qKAAC,sJAAA,CAAA,aAAU;;;;;;;;;;;AAGjB"
      }
    },
    {
      "offset": {
        "line": 983,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 990,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": ""
      }
    },
    {
      "offset": {
        "line": 992,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1012,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/config/api-fetcher.config.ts"
        ],
        "sourcesContent": [
          "import { ofetch } from 'ofetch';\r\n\r\n/**\r\n * Custom fetcher to be used for ingestion api calls\r\n */\r\nexport const apiFetcher = ofetch.create({\r\n\t// baseURL: '',\r\n\theaders: {\r\n\t\tAccept: 'application/json',\r\n\t\t'Cache-Control': 'no-cache',\r\n\t},\r\n\tretry: 2,\r\n\t/**\r\n\t * By setting the FETCH_KEEP_ALIVE environment variable to true, an http/https agent will be registered that\r\n\t * keeps sockets around even when there are no outstanding requests, so they can be used for future requests\r\n\t * without having to reestablish a TCP connection.\r\n\t *\r\n\t * Note: This option can potentially introduce memory leaks.\r\n\t * Please check https://github.com/node-fetch/node-fetch/pull/1325 for more details.\r\n\t */\r\n\tkeepalive: true,\r\n\r\n\t/*\r\n\tasync onRequest({ request, options }) {\r\n\t\t// Nothing yet\r\n\t},\r\n\r\n\tasync onRequestError({ request, options, error }) {\r\n\t\t// Nothing yet\r\n\t},\r\n\r\n\tasync onResponseError({ request, response, options }) {\r\n\t\t// Nothing yet\r\n\t}, */\r\n});"
        ],
        "names": [],
        "mappings": ";;;;;;;;;AAKO,MAAM,aAAa,OAAO,MAAM,CAAC;IACvC,eAAe;IACf,SAAS;QACR,QAAQ;QACR,iBAAiB;IAClB;IACA,OAAO;IACP;;;;;;;EAOC,GACD,WAAW;AAcZ"
      }
    },
    {
      "offset": {
        "line": 1037,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1043,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/api/fetch-poems.api.ts"
        ],
        "sourcesContent": [
          "import {\n  isJsonApiSuccessResponse,\n  type JsonApiResponse,\n} from '@httpx/json-api';\nimport { apiFetcher } from '@/config/api-fetcher.config';\nimport type { SearchPoems } from '@/server/features/poem/SearchPoems';\n\nexport const fetchPoems = async (): Promise<SearchPoems> => {\n  return apiFetcher<JsonApiResponse<SearchPoems>>('/api/rest/poem').then(\n    (resp) => {\n      if (!isJsonApiSuccessResponse(resp)) {\n        throw new Error(\n          // @todo improve error reporting\n          `Error fetching poems: ${JSON.stringify(resp?.errors ?? '')}`\n        );\n      }\n      return resp.data;\n    }\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;;;;;AAIA;;;AAGO,MAAM,aAAa;IACxB,OAAO,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAD,EAAgC,kBAAkB,IAAI,CACpE,CAAC;QACC,IAAI,CAAC,yBAAyB,OAAO;YACnC,MAAM,IAAI,MACR,gCAAgC;YAChC,CAAC,sBAAsB,EAAE,KAAK,SAAS,CAAC,MAAM,UAAU,KAAK;QAEjE;QACA,OAAO,KAAK,IAAI;IAClB;AAEJ"
      }
    },
    {
      "offset": {
        "line": 1063,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1069,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/components/PoemCard.tsx"
        ],
        "sourcesContent": [
          "import type { FC } from 'react';\nimport type { SearchPoems } from '@/server/features/poem/SearchPoems';\n\ntype Poem = SearchPoems[0];\n\ntype Props = {\n  img: Poem['image'];\n  title: Poem['title'];\n  author: Poem['author'];\n  content: Poem['content'];\n  keywords: Poem['keywords'];\n  defaultImg?: string;\n  children?: never;\n};\n\nexport const PoemCard: FC<Props> = (props) => {\n  const { img, content, author, title, keywords, defaultImg } = props;\n  const image = img ?? defaultImg;\n  return (\n    <div className=\"max-w-sm overflow-hidden rounded shadow-lg\">\n      <div className=\"aspect-h-9 aspect-w-16 lg:aspect-none h-56\">\n        <img\n          className=\"size-full object-cover object-center lg:size-full\"\n          src={image ?? ''}\n          alt={title}\n        />\n      </div>\n      <article className=\"prose px-6 py-4\">\n        <div className=\"mb-2 text-xl font-bold\">{title}</div>\n        <p className=\"text-indigo-600\">By {author}</p>\n        <p className=\"line-clamp-4 text-base text-gray-700\">{content}</p>\n      </article>\n      <div className=\"px-6 pb-2 pt-4\">\n        {keywords.map((keyword) => {\n          return (\n            <span\n              key={keyword}\n              className=\"mb-2 mr-2 inline-block rounded-full bg-gray-200 px-3 py-1 text-sm font-semibold text-gray-700\"\n            >\n              #{keyword}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;;AAeO,MAAM,WAAsB,CAAC;IAClC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG;IAC9D,MAAM,QAAQ,OAAO;IACrB,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBACC,WAAU;oBACV,KAAK,SAAS;oBACd,KAAK;;;;;;;;;;;0BAGT,qKAAC;gBAAQ,WAAU;;kCACjB,qKAAC;wBAAI,WAAU;kCAA0B;;;;;;kCACzC,qKAAC;wBAAE,WAAU;;4BAAkB;4BAAI;;;;;;;kCACnC,qKAAC;wBAAE,WAAU;kCAAwC;;;;;;;;;;;;0BAEvD,qKAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC;oBACb,qBACE,qKAAC;wBAEC,WAAU;;4BACX;4BACG;;uBAHG;;;;;gBAMX;;;;;;;;;;;;AAIR"
      }
    },
    {
      "offset": {
        "line": 1159,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1165,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/components/PoemGrid.tsx"
        ],
        "sourcesContent": [
          "import type { FC } from 'react';\nimport type { SearchPoems } from '@/server/features/poem/SearchPoems';\nimport { PoemCard } from './PoemCard';\n\nexport const PoemGrid: FC<{ poems: SearchPoems }> = (props) => {\n  const { poems } = props;\n  return (\n    <div className=\"flex flex-wrap\">\n      {poems.map((poem) => {\n        const unsplashImg = `https://source.unsplash.com/random/640x480?${(\n          poem.keywords ?? []\n        )\n          .map((keyword) => encodeURIComponent(keyword))\n          .join(',')}`;\n\n        return (\n          <div\n            key={`${poem.id}`}\n            className=\"m-2 w-full sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6\"\n          >\n            <PoemCard\n              title={poem.title}\n              content={poem.content}\n              author={poem.author}\n              keywords={poem.keywords}\n              img={unsplashImg}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAEA;;;AAEO,MAAM,WAAuC,CAAC;IACnD,MAAM,EAAE,KAAK,EAAE,GAAG;IAClB,qBACE,qKAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC;YACV,MAAM,cAAc,CAAC,2CAA2C,EAAE,CAChE,KAAK,QAAQ,IAAI,EAAE,AACrB,EACG,GAAG,CAAC,CAAC,UAAY,mBAAmB,UACpC,IAAI,CAAC,MAAM;YAEd,qBACE,qKAAC;gBAEC,WAAU;0BAEV,cAAA,qKAAC,mKAAA,CAAA,WAAQ;oBACP,OAAO,KAAK,KAAK;oBACjB,SAAS,KAAK,OAAO;oBACrB,QAAQ,KAAK,MAAM;oBACnB,UAAU,KAAK,QAAQ;oBACvB,KAAK;;;;;;eARF,GAAG,KAAK,EAAE,EAAE;;;;;QAYvB;;;;;;AAGN"
      }
    },
    {
      "offset": {
        "line": 1203,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1209,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/blocks/poetry/PoetryBlock.tsx"
        ],
        "sourcesContent": [
          "import { useQuery } from '@tanstack/react-query';\nimport type { FC } from 'react';\nimport { fetchPoems } from '../../api/fetch-poems.api';\nimport { PoemGrid } from '../../components/PoemGrid';\n\nconst PoemGridWithReactQuery: FC = () => {\n  const { data, isLoading, error } = useQuery({\n    queryKey: ['poems'],\n    queryFn: fetchPoems,\n  });\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    const { message } = error;\n    return <div>Error {message}</div>;\n  }\n  return <>{data && <PoemGrid poems={data} />}</>;\n};\n\nexport const PoetryBlock: FC = () => {\n  return (\n    <div>\n      <div className=\"lg:container lg:mx-auto\">\n        <h1 className=\"mb-2 text-4xl font-bold\">Poetry on the wild.</h1>\n        <h2 className=\"mb-2 text-xl font-bold text-indigo-600\">\n          Client fetch with ofetch / react-query from nextjs api, db in\n          supabase.io, connection with prisma. Ui with tailwind\n        </h2>\n        <PoemGridWithReactQuery />\n      </div>\n    </div>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;AAEA;AACA;;;;;;;;;AAEA,MAAM,yBAA6B;IACjC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,WAAQ,AAAD,EAAE;QAC1C,UAAU;YAAC;SAAQ;QACnB,SAAS,wKAAA,CAAA,aAAU;IACrB;IACA,IAAI,WAAW;QACb,qBAAO,qKAAC;sBAAI;;;;;;IACd;IACA,IAAI,OAAO;QACT,MAAM,EAAE,OAAO,EAAE,GAAG;QACpB,qBAAO,qKAAC;;gBAAI;gBAAO;;;;;;;IACrB;IACA,qBAAO;kBAAG,sBAAQ,qKAAC,mKAAA,CAAA,WAAQ;YAAC,OAAO;;;;;;;AACrC;AAEO,MAAM,cAAkB;IAC7B,qBACE,qKAAC;kBACC,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,qKAAC;oBAAG,WAAU;8BAAyC;;;;;;8BAIvD,qKAAC;;;;;;;;;;;;;;;;AAIT"
      }
    },
    {
      "offset": {
        "line": 1301,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1308,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/blocks/jumbotron/Jumbotron.tsx"
        ],
        "sourcesContent": [
          "import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useState, type FC } from 'react';\nimport { useIntervalWhen } from 'rooks';\n\n// noinspection CssUnknownTarget\nconst gradients = {\n  sky: css`\n    background: linear-gradient(\n      90deg,\n      rgba(33, 169, 192, 1) 0%,\n      rgba(113, 223, 208, 1) 70%,\n      rgba(113, 223, 208, 1) 100%\n    );\n  `,\n  orange: css`\n    background: linear-gradient(\n      90deg,\n      rgb(217, 102, 23) 0%,\n      rgb(69, 112, 229) 70%,\n      rgb(127, 151, 249) 100%\n    );\n  `,\n  yellow: css`\n    background: linear-gradient(\n      90deg,\n      rgb(155, 235, 16) 0%,\n      rgb(213, 226, 13) 70%,\n      rgb(48, 206, 17) 100%\n    );\n  `,\n  violet: css`\n    background: linear-gradient(\n      90deg,\n      rgb(117, 4, 139) 0%,\n      rgb(194, 69, 229) 70%,\n      rgb(252, 14, 174) 100%\n    );\n  `,\n  fun: css`\n    background-image: url('/images/anims/flow-giphy.webp');\n    background-size: cover;\n  `,\n} as const;\n\ntype GradientTextBackgrounds = keyof typeof gradients;\ntype Props = {\n  bg?: GradientTextBackgrounds;\n};\n\nconst GradientText = styled.span<Props>`\n  ${(props) => gradients[props?.bg ?? 'sky']};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  position: absolute;\n  white-space: pre;\n  &:before {\n    content: ' ';\n  }\n  &.fadeIn {\n    opacity: 1;\n    transition-property: opacity;\n    transition-duration: 1.5s;\n    transition-timing-function: ease-in;\n  }\n  &.fadeOut {\n    opacity: 0;\n    transform: translate(100px);\n    transition: all 1.5s ease-out;\n    &:last-of-type {\n      font-size: 2em;\n      transition-duration: 1s;\n    }\n  }\n`;\n\nconst titles = [\n  ['Typescript', 'sky'],\n  ['React', 'orange'],\n  ['Nextjs', 'violet'],\n  ['Prisma', 'yellow'],\n  ['Emotion', 'fun'],\n] satisfies [string, GradientTextBackgrounds][];\n\nexport const Jumbotron: FC = () => {\n  const [count, setCount] = useState(0);\n  useIntervalWhen(() => {\n    setCount((count) => (count >= titles.length - 1 ? 0 : count + 1));\n  }, 3500);\n\n  return (\n    <>\n      <div\n        css={css`\n          font-weight: bolder;\n          font-size: 3em;\n          line-height: 1.1em;\n          @media (min-width: 600px) {\n            font-size: 4em;\n          }\n        `}\n      >\n        One of many possibles\n        <br /> made with\n        {titles.map((title, idx) => {\n          const [label, grad] = title;\n          const curr = idx === count;\n          return (\n            <GradientText\n              className={curr ? 'fadeIn' : 'fadeOut'}\n              key={grad}\n              bg={grad}\n            >\n              {label}\n            </GradientText>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,gCAAgC;AAChC,MAAM,YAAY;IAChB,KAAK,oIAAA,CAAA,MAAG,CAAC;;;;;;;EAOT,CAAC;IACD,QAAQ,oIAAA,CAAA,MAAG,CAAC;;;;;;;EAOZ,CAAC;IACD,QAAQ,oIAAA,CAAA,MAAG,CAAC;;;;;;;EAOZ,CAAC;IACD,QAAQ,oIAAA,CAAA,MAAG,CAAC;;;;;;;EAOZ,CAAC;IACD,KAAK,oIAAA,CAAA,MAAG,CAAC;;;EAGT,CAAC;AACH;AAOA,MAAM,eAAe,sIAAA,CAAA,UAAM,CAAC,IAAI,AAAO,CAAC;EACtC,EAAE,CAAC,QAAU,SAAS,CAAC,OAAO,MAAM,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAuB7C,CAAC;AAED,MAAM,SAAS;IACb;QAAC;QAAc;KAAM;IACrB;QAAC;QAAS;KAAS;IACnB;QAAC;QAAU;KAAS;IACpB;QAAC;QAAU;KAAS;IACpB;QAAC;QAAW;KAAM;CACnB;AAEM,MAAM,YAAgB;IAC3B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,CAAA,GAAA,yRAAA,CAAA,kBAAe,AAAD,EAAE;QACd,SAAS,CAAC,QAAW,SAAS,OAAO,MAAM,GAAG,IAAI,IAAI,QAAQ;IAChE,GAAG;IAEH,qBACE;kBACE,cAAA,qKAAC;YACC,KAAK,oIAAA,CAAA,MAAG,CAAC;;;;;;;QAOT,CAAC;;gBACF;8BAEC,qKAAC;;;;;gBAAK;gBACL,OAAO,GAAG,CAAC,CAAC,OAAO;oBAClB,MAAM,CAAC,OAAO,KAAK,GAAG;oBACtB,MAAM,OAAO,QAAQ;oBACrB,qBACE,qKAAC;wBACC,WAAW,OAAO,WAAW;wBAE7B,IAAI;kCAEH;uBAHI;;;;;gBAMX;;;;;;;;AAIR"
      }
    },
    {
      "offset": {
        "line": 1456,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1463,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": ""
      }
    },
    {
      "offset": {
        "line": 1467,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1494,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/packages/core-lib/src/index.ts"
        ],
        "sourcesContent": [
          "export const sayHello = (name: string): string => {\n  return `I'm the @ijyu-3166/ui-lib component telling ${name} !`;\n};\n"
        ],
        "names": [],
        "mappings": ";;;AAAO,MAAM,WAAW,CAAC;IACvB,OAAO,CAAC,4CAA4C,EAAE,KAAK,EAAE,CAAC;AAChE"
      }
    },
    {
      "offset": {
        "line": 1500,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1506,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/packages/ui-lib/src/message.tsx"
        ],
        "sourcesContent": [
          "import type { FC } from 'react';\n\ntype Props = {\n  message: string;\n  children?: never;\n};\n\nexport const Message: FC<Props> = ({ message }) => <span>{message}</span>;\n"
        ],
        "names": [],
        "mappings": ";;;;;AAOO,MAAM,UAAqB,CAAC,EAAE,OAAO,EAAE,iBAAK,qKAAC;kBAAM"
      }
    },
    {
      "offset": {
        "line": 1518,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1524,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/packages/ui-lib/src/async-message.tsx"
        ],
        "sourcesContent": [
          "import { useEffect, useState, type FC } from 'react';\n\ntype Props = {\n  apiUrl: string;\n  children?: never;\n};\n\nexport const AsyncMessage: FC<Props> = (props) => {\n  const [msg, setMsg] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(props.apiUrl)\n      .then((res) => res.text())\n      .then((data) => {\n        setMsg(data);\n        setIsLoading(false);\n      })\n      .catch((err: unknown) => {\n        setError(err instanceof Error ? err.message : 'Unknown error');\n        setIsLoading(false);\n      });\n  }, [props.apiUrl]);\n\n  if (error) {\n    return <span>Error: {error}</span>;\n  }\n  if (isLoading) {\n    return <span>Loading</span>;\n  }\n\n  return <span>{msg}</span>;\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAAA;;;AAOO,MAAM,eAA0B,CAAC;IACtC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa;QACb,MAAM,MAAM,MAAM,EACf,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,OAAO;YACP,aAAa;QACf,GACC,KAAK,CAAC,CAAC;YACN,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,aAAa;QACf;IACJ,GAAG;QAAC,MAAM,MAAM;KAAC;IAEjB,IAAI,OAAO;QACT,qBAAO,qKAAC;;gBAAK;gBAAQ;;;;;;;IACvB;IACA,IAAI,WAAW;QACb,qBAAO,qKAAC;sBAAK;;;;;;IACf;IAEA,qBAAO,qKAAC;kBAAM;;;;;;AAChB"
      }
    },
    {
      "offset": {
        "line": 1576,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1606,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/features/demo/pages/DemoPage.tsx"
        ],
        "sourcesContent": [
          "import { sayHello } from '@ijyu-3166/core-lib';\nimport { AsyncMessage, Message } from '@ijyu-3166/ui-lib';\nimport Image from 'next/image';\nimport { useTranslation } from 'next-i18next';\nimport { NextSeo } from 'next-seo';\nimport type { FC } from 'react';\nimport { Banner } from '@/components/banner/Banner';\nimport { MainLayout } from '@/layouts/main';\nimport { DemoMuiBlock, Jumbotron, PoetryBlock } from '../blocks';\nimport { demoConfig } from '../demo.config';\n\nexport const DemoPage: FC = () => {\n  const { t } = useTranslation(demoConfig.i18nNamespaces);\n\n  return (\n    <>\n      <NextSeo\n        title={t('demo:page.title')}\n        description=\"Web-app nextjs monorepo example, https://github.com/belgattitude/nextjs-monorepo-example\"\n      />\n      <MainLayout>\n        <Banner />\n        <h3>I&apos;m the web-app</h3>\n        <Jumbotron />\n        <ul>\n          <li>{`Foo says: ${sayHello('World')} from @ijyu-3166/core-lib`}</li>\n          <li>\n            <Message message={'Bar react component from @ijyu-3166/ui-lib'} />\n          </li>\n          <li>\n            <AsyncMessage apiUrl={'/api/hello'} />\n          </li>\n        </ul>\n        <Image\n          src={'/images/nextjs-logo.png'}\n          alt={'logo'}\n          width={400}\n          height={240}\n        />\n        <div className={'pt-8'} />\n        <DemoMuiBlock />\n        <div className={'pt-8'} />\n        <PoetryBlock />\n      </MainLayout>\n    </>\n  );\n};\n"
        ],
        "names": [],
        "mappings": ";;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AACA;AARA;AACA;AAAA;AAOA;AAAA;;;;;;;;;;;;;;;;;;;;AAGO,MAAM,WAAe;IAC1B,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE,0JAAA,CAAA,aAAU,CAAC,cAAc;IAEtD,qBACE;;0BACE,qKAAC,+GAAA,CAAA,UAAO;gBACN,OAAO,EAAE;gBACT,aAAY;;;;;;0BAEd,qKAAC,sJAAA,CAAA,aAAU;;kCACT,qKAAC,uJAAA,CAAA,SAAM;;;;;kCACP,qKAAC;kCAAG;;;;;;kCACJ,qKAAC,6KAAA,CAAA,YAAS;;;;;kCACV,qKAAC;;0CACC,qKAAC;0CAAI,CAAC,UAAU,EAAE,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,yBAAyB,CAAC;;;;;;0CAC9D,qKAAC;0CACC,cAAA,qKAAC,iIAAA,CAAA,UAAO;oCAAC,SAAS;;;;;;;;;;;0CAEpB,qKAAC;0CACC,cAAA,qKAAC,0IAAA,CAAA,eAAY;oCAAC,QAAQ;;;;;;;;;;;;;;;;;kCAG1B,qKAAC,6RAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK;wBACL,OAAO;wBACP,QAAQ;;;;;;kCAEV,qKAAC;wBAAI,WAAW;;;;;;kCAChB,qKAAC,4KAAA,CAAA,eAAY;;;;;kCACb,qKAAC;wBAAI,WAAW;;;;;;kCAChB,qKAAC,4KAAA,CAAA,cAAW;;;;;;;;;;;;;AAIpB"
      }
    },
    {
      "offset": {
        "line": 1758,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1765,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": ""
      }
    },
    {
      "offset": {
        "line": 1767,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1795,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/server/i18n/getServerTranslations.ts"
        ],
        "sourcesContent": [
          "/**\n * Retrieve translations on server-side, wraps next-i18next.serverSideTranslations\n * to allow further customizations.\n */\nimport type { SSRConfig, UserConfig } from 'next-i18next';\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations';\nimport type {\n  I18nActiveNamespaces,\n  I18nNamespace,\n} from '@/lib/i18n/I18nNamespace.types';\nimport nextI18nextConfig from '../../../next-i18next.config.mjs';\n\nexport const getServerTranslations = async (\n  locale: string,\n  namespacesRequired?: I18nActiveNamespaces | I18nNamespace,\n  configOverride?: UserConfig | null,\n  extraLocales?: string[] | false\n): Promise<SSRConfig> => {\n  const config = configOverride ?? nextI18nextConfig;\n\n  return serverSideTranslations(\n    locale,\n    namespacesRequired,\n    config,\n    extraLocales\n  );\n};\n"
        ],
        "names": [],
        "mappings": "AAAA;;;CAGC;;;AAED;AAKA;;;;;;;AAEO,MAAM,wBAAwB,OACnC,QACA,oBACA,gBACA;IAEA,MAAM,SAAS,kBAAkB,2IAAA,CAAA,UAAiB;IAElD,OAAO,CAAA,GAAA,uLAAA,CAAA,yBAAsB,AAAD,EAC1B,QACA,oBACA,QACA;AAEJ"
      }
    },
    {
      "offset": {
        "line": 1813,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    },
    {
      "offset": {
        "line": 1820,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file://E%3A/projects/side/boiler/ijyu-3166/apps/next-shad/apps/next-shad/src/pages/index.tsx"
        ],
        "sourcesContent": [
          "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { HttpBadRequest } from '@httpx/exception';\nimport type { GetStaticProps, InferGetStaticPropsType } from 'next';\nimport { demoConfig } from '@/features/demo/demo.config';\nimport { DemoPage } from '@/features/demo/pages';\nimport { getServerTranslations } from '@/server/i18n/getServerTranslations';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\ntype Props = {\n  /** Add HomeRoute props here */\n};\n\nexport default function DemoRoute(\n  _props: InferGetStaticPropsType<typeof getStaticProps>\n) {\n  return <DemoPage />;\n}\n\nexport const getStaticProps: GetStaticProps<Props> = async (context) => {\n  const { locale } = context;\n  if (locale === undefined) {\n    throw new HttpBadRequest('locale is missing');\n  }\n  const { i18nNamespaces } = demoConfig;\n  return {\n    props: {\n      ...(await getServerTranslations(locale, i18nNamespaces)),\n    },\n  };\n};\n"
        ],
        "names": [],
        "mappings": "AAAA,oDAAoD;;;;;AACpD;AAEA;AACA;AACA;AADA;;;;;;;;;;;;;AAQe,SAAS,UACtB,MAAsD;IAEtD,qBAAO,qKAAC,8JAAA,CAAA,WAAQ;;;;;AAClB;AAEO,MAAM,iBAAwC,OAAO;IAC1D,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,IAAI,WAAW,WAAW;QACxB,MAAM,IAAI,wIAAA,CAAA,iBAAc,CAAC;IAC3B;IACA,MAAM,EAAE,cAAc,EAAE,GAAG,0JAAA,CAAA,aAAU;IACrC,OAAO;QACL,OAAO;YACL,GAAI,MAAM,CAAA,GAAA,+JAAA,CAAA,wBAAqB,AAAD,EAAE,QAAQ,eAAe;QACzD;IACF;AACF"
      }
    },
    {
      "offset": {
        "line": 1861,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [],
        "names": [],
        "mappings": "A"
      }
    }
  ]
}