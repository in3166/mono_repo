{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/apps/next-shad/src/middleware.ts"],"sourcesContent":["// @link https://nextjs.org/docs/app/building-your-application/routing/middleware\r\n\r\nimport { withAuth } from 'next-auth/middleware';\r\n\r\ntype MiddlewareEnabledRouteMatchers = (typeof config.matcher)[number];\r\n\r\nexport const config = {\r\n\tmatcher: [\r\n\t\t'/admin/:path*',\r\n\t\t// '/profile/:path*'\r\n\t],\r\n};\r\n\r\nconst adminAuthRoutes: MiddlewareEnabledRouteMatchers[] = ['/admin/:path*'];\r\n\r\nconst isAdminRoute = (\r\n\tpathName: string,\r\n\tadminRoutes: MiddlewareEnabledRouteMatchers[]\r\n): boolean => {\r\n\treturn adminRoutes.some((routePrefix) => {\r\n\t\tconst path = pathName.toLowerCase().trim();\r\n\t\tif (routePrefix.endsWith(':path*')) {\r\n\t\t\treturn pathName.startsWith(routePrefix.slice(0, -7));\r\n\t\t}\r\n\t\treturn path === routePrefix;\r\n\t});\r\n};\r\n\r\nexport default withAuth({\r\n\tcallbacks: {\r\n\t\tauthorized: ({ req, token }) => {\r\n\t\t\tconst { pathname } = req.nextUrl;\r\n\t\t\treturn (\r\n\t\t\t\t!isAdminRoute(pathname, adminAuthRoutes) || token?.role === 'admin'\r\n\t\t\t);\r\n\t\t},\r\n\t},\r\n});"],"names":[],"mappings":"AAAA,iFAAiF;;;;;AAEjF;;AAIO,MAAM,SAAS;IACrB,SAAS;QACR;KAEA;AACF;AAEA,MAAM,kBAAoD;IAAC;CAAgB;AAE3E,MAAM,eAAe,CACpB,UACA;IAEA,OAAO,YAAY,IAAI,CAAC,CAAC;QACxB,MAAM,OAAO,SAAS,WAAW,GAAG,IAAI;QACxC,IAAI,YAAY,QAAQ,CAAC,WAAW;YACnC,OAAO,SAAS,UAAU,CAAC,YAAY,KAAK,CAAC,GAAG,CAAC;QAClD;QACA,OAAO,SAAS;IACjB;AACD;uCAEe,CAAA,GAAA,+VAAA,CAAA,WAAQ,AAAD,EAAE;IACvB,WAAW;QACV,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE;YAC1B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;YAChC,OACC,CAAC,aAAa,UAAU,oBAAoB,OAAO,SAAS;QAE9D;IACD;AACD"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}